# -*- coding: utf-8 -*-
"""Error Level Analysis and Visualization.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1O88uEEIgfX38Is9lyqhdv8TlcIZk4dxe
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd

dfreal = pd.DataFrame(columns=['Image','Status','Maximum_Difference','Scale'])
dffake = pd.DataFrame(columns=['Image','Status','Maximum_Difference','Scale'])

#Getting the maximum difference and scale of all the PAN Card images

import os 
from os import listdir
import numpy as np
import sys, os.path
from PIL import Image, ImageChops, ImageEnhance
import matplotlib.pyplot as plt

filename = sys.argv[1]
resaved = filename + '.resaved.jpg'
datadir = '/content/drive/MyDrive/images1cropped'  # root data directory
x,y = [],[]
CATEGORIES = os.listdir(datadir)

for category in CATEGORIES:
      path = os.path.join(datadir, category)
      classIndex = CATEGORIES.index(category)
      print(category)

      for imgs in os.listdir(path): #Tqdm is a loop progress visualizer
        imgpath = os.path.join(path,imgs)
        im = Image.open(imgpath)
        img = np.array(im)
        a,b,c = img.shape
        if c == 4:
          im = im.convert('RGB')
          
        im.save(resaved, 'JPEG', quality=95)
        resaved_im = Image.open(resaved)

        ela_im = ImageChops.difference(im, resaved_im)

        extrema = ela_im.getextrema() #Gets the minimum and maximum pixel values for each band in the image.

        max_diff = max([ex[1] for ex in extrema])
        if max_diff == 0:
            max_diff = 1
        scale = 255.0 / max_diff
    

        ela_im = ImageEnhance.Brightness(ela_im).enhance(scale)

        #ela_im.save(ela)
        #plt.imshow(im)
        new_row = {'Image':imgs, 'Status':category, 'Maximum_Difference':max_diff, 'Scale':scale}
        if category == "real":
            dfreal = dfreal.append(new_row, ignore_index=True)
        else:
          dffake = dffake.append(new_row, ignore_index=True)


display(dfreal)
display(dffake)

df = dfreal.append(dffake, ignore_index=True)
display(df)

# bar plot
df.plot(kind = 'bar',
        x = 'Status',
        y = 'Maximum_Difference',
        figsize=(10, 8))
  
# set the title
plt.title('Real and Fake Against Maximum Difference')
  
# show the plot
plt.show()

#Range of Real - [3,11] Range of Fake - [11,29]

#Finding the maximum and minimum value for maximum difference for fake and real PAN cards

df['Maximum_Difference'].min()
display(dfreal[dfreal.Maximum_Difference == dfreal.Maximum_Difference.min()].style.set_caption('Minimum In Real'))
display(dfreal[dfreal.Maximum_Difference == dfreal.Maximum_Difference.max()].style.set_caption("Maximum In Real"))

display(dffake[dffake.Maximum_Difference == dffake.Maximum_Difference.min()].style.set_caption("Minimum In Fake"))
display(dffake[dffake.Maximum_Difference == dffake.Maximum_Difference.max()].style.set_caption("Maximum In Real"))

# bar plot
df.plot(kind = 'bar',
        x = 'Status',
        y = 'Scale', color ='teal',
        figsize=(10, 8))
  
# set the title
plt.title('Real and Fake Against Scale')
  
# show the plot
plt.show()
#Range of Real - [12,85] Range of Fake - [8,23]

##Finding the maximum and minimum value for scale for fake and real PAN cards

display(dfreal[dfreal.Scale == dfreal.Scale.min()].style.set_caption('Minimum In Real'))
display(dfreal[dfreal.Scale == dfreal.Scale.max()].style.set_caption("Maximum In Real"))

display(dffake[dffake.Scale == dffake.Scale.min()].style.set_caption("Minimum In Fake"))
display(dffake[dffake.Scale == dffake.Scale.max()].style.set_caption("Maximum In Real"))
